*** Settings ***
Library           DatabaseLibrary
Library           Selenium2Library
Library           ibm_db_dbi
Library           HttpLibrary.HTTP
Library           BuiltIn
Library           String
Library           DateTime
Library           Collections
Library           requests
Library           XML
Library           SudsLibrary
Library           Telnet
Library           Process
Library           FtpLibrary
Library           jaydebeapi
Library           infx
Library           FtpLibrary
Library           SSHLibrary
Library           ExcelLibrary
Library           CSVLibrary
Library           CustomKeywords
Library           OperatingSystem
Library           TRLibrary    testrail@west.com    dQadQPZ1NrSwFEZsCNvm-1dGqYePkQ8KjKpn7.mKd
Library           SFTPLibrary
Library           JMeterLib

*** Variables ***
${TR_Password}    *********
${TR_UserName}    aullah
${TR_TestRunID}    ${EMPTY}
${TR_REPORT}      TRUE    # TRUE or FALSE
${TR_TestCase}    ${EMPTY}
${JMX_File_Name}    Ready_Refill.jmx
${Jmeter_Path}    /usr/local/apache-jmeter-3.0/bin
${Jmeter_Log_File_Name}    ReadyRefill
${Log_File_Path}    /opt/jenkins/workspace/Ready_Refill_Bypass_Jmeter/Walmart


*** Keywords ***
TimeStamp
    ${date}    Get Current Date    local
    ${TimeSatmp}    Convert Date    ${date}    epoch    exclude_millis=yes
    ${TimeStamp_String}    Convert to String    ${TimeSatmp}
    ${timeStamp}    Get Substring    ${TimeStamp_String}    0    4
    [Return]    ${timeStamp}

Convert list data
    [Arguments]    ${list}
    ${result}=    evaluate    "[" + ", ".join(${list}) + "]"
    [Return]    ${result}

Log Into CXM
    Open Browser    ${URL}    ${browser}
    Set Selenium Implicit Wait    5 seconds
    Set Selenium Speed    .25 seconds
    Click Element    xpath = id('navbar__actions')/ul[2]/li/a
    Sleep    5s
    Input text    username    ${logon_username}
    Input text    password    ${logon_password}
    Click Element    xpath = id('loginForm')/div[4]/div[2]/button
    sleep    6s
    Click Element    xpath =id('main')/div/div/div[2]/div/a/div
    sleep    5s
    wait until page contains    tenants

Setup Test Suite
    Set Suite Variable    ${logon_username}
    Set Suite Variable    ${logon_password}
    Set Selenium Implicit Wait    10 seconds
    Set Selenium Speed    .5 seconds

Setup Test Case
    Comment    Open Browser    ${URL}    ${browser}
    Comment    Go To    ${URL}
    Log Into CXM
    Set Selenium Implicit Wait    10
    Set Selenium Speed    .5 seconds

Logout of CXM
    Click Element    xpath = id('navbar__actions')/div[1]/ul/li[5]/div/button
    Click Element    xpath =id('navbar__actions')/div[1]/ul/li[5]/div/ul/li[3]/a/span[2]
    Sleep    3s
    Close Browser

DBquery
    [Arguments]    ${Transaction_Id}    ${Patient_Id}    ${Phone_Number}
    ${result1}    convert to string    contactpointvalue = '${Phone_Number}'
    [Return]    ${result1}

Grep
    [Arguments]    ${Transaction_Id}
    ${Date}    Get Current Date
    ${YYMMDD}    Convert Date    ${Date}    result_format=%y%m%d
    ${result1}    convert to string    cvs_seasonal_allergy_log4_20${YYMMDD}.txt
    [Return]    ${result1}

RTIgenerator
    [Arguments]    ${resultRow}    @{Keys}
    ${index}    Evaluate    1
    ${line}    Set Variable    line
    ${line1}    Set Variable    value
    ${b}    Set Variable
    : FOR    ${i}    IN    @{Keys}
    \    Set Test Variable    ${${index}${line}}    ${i}
    \    ${c}    Get From Dictionary    ${resultRow}    ${${index}${line}}
    \    ${b}=    Set Variable    <param key="${${index}${line}}" value="${c}"/>${b}
    \    ${index}    Evaluate    ${index}+1
    [Return]    ${b}

RTI_GEN
    [Arguments]    ${resultRow}    @{Keys}
    ${index}    Evaluate    1
    ${line}    Set Variable    line
    ${b}    Set Variable
    : FOR    ${i}    IN    @{Keys}
    \    Set Test Variable    ${${index}${line}}    ${i}
    \    ${c}    Get From Dictionary    ${resultRow}    ${${index}${line}}
    \    ${b}=    Set Variable    <${${index}${line}}>${c}</${${index}${line}}>${b}
    \    ${index}    Evaluate    ${index}+1
    [Return]    ${b}

Preprocessor_Batch_Validation
    ${Current_Time}    Get Current Date    local
    ${C_Time}    Add Time To Date    ${Current_Time}    -.09 hours
    ${Start_time}    Get Substring    ${C_Time}    11    -7
    ${E_Time}    Add Time To Date    ${Current_Time}    +0.19 hours
    ${End_time}    Get Substring    ${E_Time}    11    -7
    sleep    30s
    Start Command    grep "${Preprocessor_FormatName} " ${LoaderLogs} | awk -v from="${Start_Time}" -v to="${End_Time}" '$1>=from && $1<=to'| tail -1 | awk '{print$6}'
    ${Proccessed_File_Name}=    Read Command Output
    Log    ${Proccessed_File_Name}
    Start Command    grep "${Proccessed_File_Name} ${Preprocessor_FormatName} " ${LoaderLogs} | awk -v from="${Start_Time}" -v to="${End_Time}" '$1>=from && $1<=to'
    ${std_output}=    Read Command Output
    Should Contain    ${std_output}    ${Proccessed_File_Name} ${Preprocessor_FormatName}
    Log    ${std_output}
    Start Command    grep -i "${Proccessed_File_Name} ${Preprocessor_BatchFileProcessor}" ${LoaderLogs} | awk -v from="${Start_Time}" -v to="${End_Time}" '$1>=from && $1<=to'
    ${std_output}=    Read Command Output
    Should Contain    ${std_output}    ${Proccessed_File_Name} ${Preprocessor_BatchFileProcessor} \ [COMPLETE DATABASE INSERT:

Preprocessor_RTI_Validation
    ${Current_Time}    Get Current Date    local
    ${C_Time}    Add Time To Date    ${Current_Time}    -.09 hours
    ${Start_time}    Get Substring    ${C_Time}    11    -7
    ${E_Time}    Add Time To Date    ${Current_Time}    +0.19 hours
    ${End_time}    Get Substring    ${E_Time}    11    -7
    sleep    30s
    Start Command    grep \ "${Preprocessor_FormatName}" ${LoaderLogs} | awk -v from="${Start_Time}" -v to="${End_Time}" '$1>=from && $1<=to'
    ${std_output}=    Read Command Output
    Should Contain    ${std_output}    ${Preprocessor_FormatName}
    Log    ${std_output}
    Start Command    grep \ "${Preprocessor_AbstractFileProcessor}" ${LoaderLogs} | awk -v from="${Start_Time}" -v to="${End_Time}" '$1>=from && $1<=to'
    ${std_output}=    Read Command Output
    Should Contain    ${std_output}    COMPLETE PREPROCESSOR
    Log    ${std_output}

Predialer_Batch_Validation
    ${wb}    Open Excel Current Directory    My_TestData1Msgs.xls
    ${Transaction_Id}    Read Cell Data By Coordinates    ValidInput    0    2
    Start Command    grep "Transaction id: ${Transaction_Id}" ${EngineLog} | grep "Start"
    ${std_output}=    Read Command Output
    Log    ${std_output}
    Should Contain    ${std_output}    Start of Predial check west_record_id
    Log    ${std_output}
    Start Command    grep "Transaction id: ${Transaction_Id}" ${EngineLog} | grep "End"
    ${std_output}=    Read Command Output
    Should Contain    ${std_output}    End of Predial check west_record_id
    Log    ${std_output}
    Start Command    grep "Transaction id: ${Transaction_Id}" ${EngineLog} | awk '{print $10}' | \ sed 's/,//g'
    ${std_output}=    Read Command Output
    Start Command    grep "com.west.wic.notifications.engine.delivery.mcn.preprocessor.NotificationThreadPoolExecutor INFO" ${EngineLog} \ | grep "record ${std_output}"
    ${std_output}=    Read Command Output
    Log    ${std_output}

Predialer_RTI_Validation
    [Tags]    ValidatePredialer
    ${connection}    Jdbc Connect    ${DB_Host}    ${DB_Port}    ${DB_Name}    ${DB_Host}    ${DB_Username}
    ...    ${DB_Password}
    : FOR    ${rownum}    IN RANGE    1    ${Countofrecordsinfile}+1
    \    ${R}    Convert To Integer    ${rownum}
    \    ${resultRow}    Read Cell Value By Row    ${Data_Cleanup_File}    ${R}
    \    log    ${resultRow}
    \    ${patient_phone_number}    Get From Dictionary    ${resultRow}    ${Phone_Number}
    \    log    ${patient_phone_number}
    \    ${cursor}    Jdbc Query    ${connection}    select west_record_id from ${Camp_Format} where ${Camp_Format_Column1} = '${patient_phone_number}'
    \    ${DB_results}    Jdbc Result    ${cursor}
    \    Log    ${DB_results}
    \    ${Record_Id}    convert to String    ${DB_results}
    \    ${West_Record_Id}    get Substring    ${Record_Id}    21    -2
    \    Start Command    grep "Start of Predial check west_record_id ${West_Record_Id}" ${EngineLog}
    \    ${std_output}=    Read Command Output
    \    Log    ${std_output}
    \    Run Keyword If    '${std_output}'== 'Start of Predial check west_record_id: ${West_Record_Id}'    log    "Pass"
    \    ...    ELSE    log    "Fail"
    \    Start Command    grep | "End of Predial check west_record_id: ${West_Record_Id}" ${EngineLog}
    \    ${std_output}=    Read Command Output
    \    Log    ${std_output}
    \    Run Keyword If    '${std_output}'== 'End of Predial check west_record_id: ${West_Record_Id}'    log    "Pass"
    \    ...    ELSE    log    "Fail"
    Jdbc Release    ${cursor}
    Jdbc Disconnect    ${connection}

Predialer_RTI_Validation_WM
    [Tags]    ValidatePredialer
    ${connection}    Jdbc Connect    ${DB_Host}    ${DB_Port}    ${DB_Name}    ${DB_Host}    ${DB_Username}
    ...    ${DB_Password}
    : FOR    ${rownum}    IN RANGE    1    ${Countofrecordsinfile}+1
    \    ${R}    Convert To Integer    ${rownum}
    \    ${resultRow}    Read Cell Value By Row    ${Data_Cleanup_File}    ${R}
    \    log    ${resultRow}
    \    ${patient_phone_number}    Get From Dictionary    ${resultRow}    ${Phone_Number}
    \    log    ${patient_phone_number}
    \    ${cursor}    Jdbc Query    ${connection}    select west_record_id from ${Enrollment_Format} where ${Enrollment_Format_Column1} = '${patient_phone_number}'
    \    ${DB_results}    Jdbc Result    ${cursor}
    \    Log    ${DB_results}
    \    ${Record_Id}    convert to String    ${DB_results}
    \    ${West_Record_Id}    get Substring    ${Record_Id}    21    -2
    \    Start Command    grep "Start of Predial check west_record_id ${West_Record_Id}" ${EngineLog}
    \    ${std_output}=    Read Command Output
    \    Log    ${std_output}
    \    Run Keyword If    '${std_output}'== 'Start of Predial check west_record_id: ${West_Record_Id}'    log    "Pass"
    \    ...    ELSE    log    "Fail"
    \    Start Command    grep | "End of Predial check west_record_id: ${West_Record_Id}" ${EngineLog}
    \    ${std_output}=    Read Command Output
    \    Log    ${std_output}
    \    Run Keyword If    '${std_output}'== 'End of Predial check west_record_id: ${West_Record_Id}'    log    "Pass"
    \    ...    ELSE    log    "Fail"
    Jdbc Release	${cursor}
    Jdbc Disconnect	${connection}
    
Cleanup TestCase
    [Documentation]    Keywords to be executed when a test case finishes or fails
    TR_Report Test Status
    
Suite Setup
    Run Keyword If    '${TR_REPORT}' == 'TRUE'    TR_CreateTestRun
    
TR_TestCase Pass
    Update TR Test Case    ${TR_TestRunID}    ${TR_TestCase}    1    http://led00423.wic.west.com/jenkins/job/WM_OrderReady_SEND_SMS_RTI_PreProd_TestRail_Report/ws/Walmart/log.html
    log    ${TR_TestRunID}
    
TR_TestCase Fail
    Update TR Test Case    ${TR_TestRunID}    ${TR_TestCase}    5    http://led00423.wic.west.com/jenkins/job/WM_OrderReady_SEND_SMS_RTI_PreProd_TestRail_Report/ws/Walmart/log.html
    
TR_TestCase Result
    Run Keyword If    '${TEST_STATUS}' == 'PASS'    TR_TestCase Pass
    Run Keyword If    '${TEST_STATUS}' == 'FAIL'    TR_TestCase Fail
    
TR_Report Test Status
    Run Keyword If    '${TR_REPORT}' == 'TRUE'    TR_TestCase Result
    
TR_CreateTestRun
    ${TR_TestRunID}=    Create TR Test Run    108    2387    Contessa    446320 446321 446423 486948 446322 446323 446421 446422 446426 446427 446428 446436 486949 486950 446431 446432 446433 486951 446328 446424 446425 446435 
    Set Global Variable    ${TR_TestRunID}
    log    ${TR_TestRunID}

